<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[自定义仪表倒计时]]></title>
    <url>%2F2018%2F07%2F07%2F20180707%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%AA%E8%A1%A8%E5%80%92%E8%AE%A1%E6%97%B6%2F</url>
    <content type="text"><![CDATA[如何自定义仪表倒计时 对于复杂的自定义控件，主要做到化繁为简、一步步剖析，就如同车间生产线一样，分解成一个个零件生产，然后再组装调试，达到自己期望的目标；而不是盲目的去写代码，先要有整体的构思 然后再去实践；效率事半功倍，对于所需要的知识也可以在实践前了解清楚，这样避免了所用的方法或者函数不熟悉，导致时间浪费了 ¶设计结构 ¶设计所需知识点梳理 ¶详细代码package wudiplk.com.mycustomview.custom_view;import android.content.Context;import android.graphics.Canvas;import android.graphics.Paint;import android.graphics.PixelFormat;import android.graphics.Rect;import android.os.Handler;import android.os.Message;import android.support.v4.content.ContextCompat;import android.util.AttributeSet;import android.view.Gravity;import android.view.SurfaceHolder;import android.view.SurfaceView;import android.view.View;import android.widget.RelativeLayout;import android.widget.TextView;import wudiplk.com.mycustomview.R;import wudiplk.com.mycustomview.util.DensityUtils;/** * Created by Wu di on 2017/9/6. * Description: */public class CountDownTimer extends RelativeLayout &#123; private Context context; /** * 前景、背景形状 */ private BgView bgView; private ForeView foreView; /** * 中间文字 */ private TextView tvTimer, tvSecondTimer; private int radius, rectWith, rectHeight; private Rect rect; private int time =6; private Handler handler = new Handler(new Handler.Callback() &#123; @Override public boolean handleMessage(Message msg) &#123; tvTimer.setText(&quot;&quot; + time); return false; &#125; &#125;); public CountDownTimer(Context context) &#123; super(context); this.context = context; init(); &#125; public CountDownTimer(Context context, AttributeSet attrs) &#123; super(context, attrs); this.context = context; init(); &#125; public CountDownTimer(Context context, AttributeSet attrs, int defStyleAttr) &#123; super(context, attrs, defStyleAttr); this.context = context; init(); &#125; private void init() &#123; // 定义形状 rectWith = DensityUtils.dp2px(context, 3); rectHeight = DensityUtils.dp2px(context, 20); // 中间文字 tvTimer = new TextView(context); tvTimer.setTextColor(ContextCompat.getColor(context, R.color.c_FF9E00)); tvTimer.setTextSize(100); tvTimer.setGravity(Gravity.CENTER); tvTimer.setText(time + &quot;&quot;); RelativeLayout.LayoutParams layoutParams = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.MATCH_PARENT); layoutParams.addRule(RelativeLayout.CENTER_IN_PARENT, RelativeLayout.TRUE); addView(tvTimer, layoutParams); // 添加字符“秒”的位置 tvSecondTimer = new TextView(context); tvSecondTimer.setTextColor(ContextCompat.getColor(context, R.color.c_FF9E00)); tvSecondTimer.setTextSize(22); tvSecondTimer.setText(&quot;秒&quot;); layoutParams = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.MATCH_PARENT); layoutParams.setMargins(DensityUtils.dp2px(context, 145), DensityUtils.dp2px(context, 130), 0, 0); addView(tvSecondTimer, layoutParams); // 添加到容器 foreView = new ForeView(context); addView(foreView); bgView = new BgView(context); addView(bgView); &#125; /** * 测量获取屏幕的宽高 * * @param w * @param h * @param oldw * @param oldh */ @Override protected void onSizeChanged(int w, int h, int oldw, int oldh) &#123; super.onSizeChanged(w, h, oldw, oldh); radius = getMeasuredWidth() / 2; rect = new Rect(); rect.left = radius - rectWith; rect.right = radius + rectWith; rect.top = 0; rect.bottom = rectHeight; &#125; private boolean isDraw = false; /** * 背景形状 */ private class BgView extends View &#123; private Paint rectPaint; public BgView(Context context) &#123; super(context); rectPaint = new Paint(); rectPaint.setStyle(Paint.Style.FILL); rectPaint.setColor(ContextCompat.getColor(context, R.color.c_5A492F)); &#125; @Override protected void onDraw(Canvas canvas) &#123; if (!isDraw) &#123; for (int i = 0; i &lt; 60; i++) &#123; canvas.rotate(6, radius, radius); canvas.drawRect(rect, rectPaint); canvas.save(); &#125; isDraw = true; &#125; &#125; &#125; /** * 完成的回掉接口 */ public interface OnFinishListener &#123; /** * 完成结束 */ void onFinish(); &#125; private OnFinishListener onFinishListener; public void setOnFinishListener(OnFinishListener onFinishListener) &#123; this.onFinishListener = onFinishListener; &#125; /** * 倒计时开始 */ public void onStart() &#123; foreView.timerThread.isStop = false; foreView.timerThread.start(); &#125; /** * 倒计时结束 */ public void onStop() &#123; if (foreView.timerThread != null) &#123; foreView.timerThread.onStop(); &#125; &#125; /** * 前面倒计时动画 */ protected class ForeView extends SurfaceView implements SurfaceHolder.Callback &#123; private Context context; private SurfaceHolder mSurfaceHolder; private Paint forePaint; private TimerThread timerThread; public ForeView(Context context) &#123; super(context); this.context = context; mSurfaceHolder = getHolder(); mSurfaceHolder.addCallback(this); mSurfaceHolder.setFormat(PixelFormat.TRANSLUCENT); setZOrderOnTop(true); forePaint = new Paint(); forePaint.setStyle(Paint.Style.FILL); forePaint.setColor(ContextCompat.getColor(context, R.color.c_FFB700)); timerThread = new ForeView.TimerThread(); &#125; @Override public void surfaceCreated(final SurfaceHolder surfaceHolder) &#123; // 自动开始 timerThread.start(); &#125; @Override public void surfaceChanged(SurfaceHolder holder, int format, int width, int height) &#123; &#125; @Override public void surfaceDestroyed(SurfaceHolder holder) &#123; &#125; /** * 倒计时动画更新线程 */ private class TimerThread extends Thread &#123; private boolean isStop = false; public TimerThread() &#123; super(); &#125; @Override public void run() &#123; while (time &gt; 0 &amp;&amp; !isStop &amp;&amp; mSurfaceHolder != null) &#123; for (int i = 0; i &lt;= 31; i++) &#123; Canvas canvas = mSurfaceHolder.lockCanvas(); if (canvas == null) &#123; break; &#125; // 重绘进度 for (int d = 0; d &lt;= i; d++) &#123; canvas.drawRect(rect, forePaint); canvas.rotate(-6, radius, radius); canvas.drawRect(rect, forePaint); canvas.rotate(-6, radius, radius); &#125; mSurfaceHolder.unlockCanvasAndPost(canvas); // 暂停时间 try &#123; Thread.sleep(34); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; &#125; time--; // 当旋转一圈改变进度条颜色 handler.sendMessage(new Message()); if (time % 2 == 0) &#123; forePaint.setColor(ContextCompat.getColor(context, R.color.c_5A492F)); &#125; else &#123; forePaint.setColor(ContextCompat.getColor(context, R.color.c_FFB700)); &#125; &#125; if (onFinishListener != null) &#123; onFinishListener.onFinish(); &#125; &#125; public void onStop() &#123; isStop = true; &#125; &#125; &#125;&#125; 相关资料：https://www.jianshu.com/p/b037249e6d31 Demo:https://github.com/wudiplk/MyCustomView]]></content>
      <categories>
        <category>技术</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>仪表倒计时</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何搭建个人博客--终极指南]]></title>
    <url>%2F2018%2F07%2F06%2F20180705%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BB%88%E6%9E%81%E6%8C%87%E5%8D%97%2F</url>
    <content type="text"><![CDATA[前言 之前搭建博客思考了很久，大学时做过网站后来找工作了就不了了之了，现在想起来挺可惜的。 方案一：自己写的话，博客可以根据自己的内容修改，比较自由但时间成本高,效益差。 方案二：用大神的博客框架、简单易上手、可修改性差，但功能丰富齐全，时间成本低。 方案三：用别人框架，自己修改下（都是泪啊）。对于踩过坑的我来说还是第二种省事。毕竟文章内容质量胜于 网站的表现形式，虽然说丰富的功能根据个性（PS：个人观点）下面就整理一下搭建博客的流程以及参考的资料，怕久了自己也忘记了，毕竟过来了，就总得留下些什么。 ¶准备工作 一、 对于萌新来说，可以先看下以下参考资料： 建站知识：https://juejin.im/entry/58c62279ac502e006209eb4a 博客博客框架：http://topspeedsnail.com/static-website-generators_or_tools/ ¶开始步骤 一、 注册github账号和创建库 https://github.com/ 二、 配置Hexo Hexo比较友好有自己的官方网站：https://hexo.io/zh-cn/docs/ 三、将本地Hexo站点部署到GitHubPages 设置Git的账号密码(即运行git界面 右击菜单） 打开命令行，键入以下命令，其中，字符串中的内容替换为你自己的信息，这里为了清晰一致，建议使用 GitHub 账户相同的配置信息 12git config --global user.name &quot;yourname&quot; git config --global user.email &quot;youremail&quot; 创建 SSH Key 在出现的 OpenSSH 界面，点击右上角的 Generate Key 以创建 SSH Key。注意，期间会让你输入密码两次，这个密码是本地 Git 与远程 Git 通信时要用到的，要牢牢记住。 OpenSSH 创建好的 SSH Key，会被存储到为一个私钥文件和一个公钥文件；如果是 Windows 操作系统的话，则他们位于 ./c/Users/pcusername/.ssh 路径下，名称分别是 id_rsa 和 id_rsa.pub 3.远程 GitHub 本地 Git 与远程 GitHub 通信 命令行键入以下命令： $ ssh -T git@github.com Enter passphrase for key ‘/c/Users/pcusername/.ssh/id_rsa’: 当键入以上命令回车后，会出现让我们输入密码的提示，这个密码就是刚刚我们使用 Open SSH 创建 SSH Key 时所输入的密码。 依赖 为了正常部署到远程 Git 仓库，我们还需要先安装一个 Hexo 插件 hexo-deployer-git 1$ npm install hexo-deployer-git --save 配置 由于是部署到远程的 Git 仓库，所以我们需要修改一些配置参数以使其符合针对 Git 的部署配置。 使用文本编辑器打开站点文件夹根目录下的 _config.yml 文件，修改其 deploy 字段之后的内容 12345deploy: type: git repo: git@github.com:你的GitHub用户名/你的GitHub用户名.github.io.git brandh: master messge: 其中，各个参数意义如下： repo ：要部署的远程 Git 仓库地址 branch ：仓库分支名称，程序会自动检测，如果你创建的仓库没有做过修改，那么该值应该就是master message ：自定义 Git 的本次 commit 信息（Hexo会按照一定默认生成） 部署 1$ hexo deploy hexo clear (清理缓存) hexo s debug (编译模式) hexo g hexo d hexo d -g ¶四、动态域名绑定 计入阿里云后台 进入解析域名 添加域名解析 其中185.199.110.153 是ping https://github.com/wudiplk/wudiplk.github.io 网页，至于如何ping 自行百度 进入https://github.com/wudiplk/wudiplk.github.io 设置 添加CNAMA 在hexod的public的文件夹下创建CNAME.txt 填入你的域名（如 www.wudiplk.top)去掉后缀,保存发布到github]]></content>
      <categories>
        <category>Web建站</category>
        <category>搭建</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo优化--添加百度、谷歌搜索站点地图]]></title>
    <url>%2F2018%2F06%2F20%2F20180620Hexo%E4%BC%98%E5%8C%96%E6%B7%BB%E5%8A%A0%E7%99%BE%E5%BA%A6%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E7%AB%99%E7%82%B9%E5%9C%B0%E5%9B%BE%2F</url>
    <content type="text"><![CDATA[Hexo优化–添加百度、谷歌搜索站点地图 ¶一、什么是站点地图 网站地图，又称站点地图，它就是一个页面，上面放置了网站上需要搜索引擎抓取的所有页面的链接（注：不是所有页面）。大多数人在网站上找不到自己所需要的信息时，可能会将网站地图作为一种补救措施。搜索引擎蜘蛛非常喜欢网站地图。 https://baike.baidu.com/item/网站地图/393478?fr=aladdin ¶二、Hexo如何添加站点地图 nmp 为Hexo提供了相关的插件，我们仅仅需要安装相应的插件就可以。 ¶步骤1：安装插件 谷歌搜索: 1npm install hexo-generator-sitemap --save 百度搜索: 1npm install hexo-generator-baidu-sitemap --save ¶步骤2：生成站点文件 命令 1hexo g -d ¶步骤3：到相应的网站添加站点地图 百度：https://ziyuan.baidu.com/ 谷歌：https://www.google.com/webmasters/tools/home?hl=zh-CN&amp;authuser=0 两者都要进行相关的注册，注册验证好找到相应的添加站点,两者都是要验证网站的所有权（方式有多种，我们选择上传文件方式） 下载指定文件到 hexo 的public文件夹下然后 hexo d 百度操作 谷歌操作]]></content>
      <categories>
        <category>Web建站</category>
        <category>优化</category>
      </categories>
      <tags>
        <tag>Hexo优化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何寻找电影资源]]></title>
    <url>%2F2018%2F06%2F19%2F20180706%E5%A6%82%E4%BD%95%E5%AF%BB%E6%89%BE%E7%94%B5%E5%BD%B1%E8%B5%84%E6%BA%90%20%2F</url>
    <content type="text"><![CDATA[在当今版权大道横行的今天如何寻找电影资源呢？不管你是萌新还是小白，走过路过千万被错过，对于支持盗版还是正版，我个人觉得有条件的可以去支持下正版，比如一些高质量的电影 战狼、红海行动、复仇者联盟等电影还是会去电影支持下，再者有时候下载些自己喜欢的电影收藏，那么就不要错过了。网络冲浪冲浪十余载，今天我就分享给大家。 工欲善其事必先利其器–下载工具 话说这网络江湖十余载，下载工具可是风风雨雨层层出不穷，先从快车横空出世，再到迅雷不及掩耳之势杀出来的迅雷，再到如旋风一般的QQ旋风下载，如今也只剩下迅雷一家独大。不过这些都是大家熟知的国内下载 工具还有些大家比较少见的过国外的工具。如μTorrent、Qbittorrent、IDM等，下面就给大家介绍下这些工具优略。 迅雷：主要下载一些正版资源、磁力链接等不敏感的资源下载的话还是很快，总体来说还是比较全能，就是广告太多，有条件可以买vip用vip专享版还是不错的，或者使用精简版或者和谐版，这个大家自行百度/谷歌。 IMD：IDM是我个人比较常用的工具，下载百度网盘资源（不限速）其他一些网页资源，都能爬出来，如YouTube等一些网站上资源，缺点是不能下载磁力资源、种子资源。 μTorrent、Qbittorrent：是当前比较好用的BT下载工具、其他什么的比特、快驴什么都是渣渣。缺点BT好用、其他一般般，下载完成的资源需要做种(即分享给其他下载P2P技术，人人为我我为人人） –萌新篇 对于比较省事的萌新来说，直接购买腾讯、优酷、爱奇艺VIP即可免广告蓝光观影，缺点是各家有自己资源、会员伤不起啊。腾讯拥有比较多的优质的电影动漫等，爱奇艺也差不多，优酷资源相对质量不高。但对于学生党又不怕麻烦 那就选择VIP解析，直接把各大网站的VIP链接，这类的网站很多大家可以自行百度搜索“VIP解析”关键字 VIP解析：http://tv.dsqndh.com/ –菜鸡篇 对于不怕麻烦对于画质又有点要求的同学，下载回来看绝对是个不错的方法至少不会关键时刻卡住 小调网：https://www.xiaopian.com/ 飘花电影：https://www.piaohua.com/ BT电影天堂：http://www.btbtdy.com/ 6V电影 ：http://www.6vdy.com/ 迅影网：http://www.xunyingwang.com/s 神马电影网：http://www.9rsm.com/ 搬运工：http://www.banyungong.org/ 电影FM：http://dianying.fm/discovery/rosso-come-il-cielo/ 圣城家园：http://www.cnscg.com/ ＢＴ首发站：http://www.btshoufa.com/forum.php 思享ＢＴ电影：http://ibzz.39cs.com/ LOL电影天堂：https://www.loldytt.com/ –老司机篇 对于一些喜欢收藏电影，对电影画质、声效有要求的同学来说，这些资源来说，必须具备以下条件，硬盘：4T起步，网速：50M起步，硬盘可以是给自己的电脑装一个大的，或者买个NAS来下载，比较流行的是群晖、威联通 我用的是入门级的威联通NAS,也可以自己组装，安装上黑群晖或者黑威联通都是可以的，这些就不展开讲了，大家可以自行百度，我有的是威联通入门的（PS：图省事 主要下载4k电影） 电驴贡献共享资源网站：http://www.ed2000.com/ 3D电影资源：http://bbs.cnliti.com/ 4K中国：http://www.hao4k.com/ 4K宅极客：https://www.zhaiiker.com/ 韩国电影资源网站:http://www.totoria.net/ (很不错网站，速度快质量高，可以用谷歌翻译) 海盗湾：https://thepiratebay3.org/（神奇网站）还有些其他BT搜索网站大家自行谷歌]]></content>
      <categories>
        <category>分享福利</category>
        <category>资源分享</category>
      </categories>
      <tags>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的第一篇文章]]></title>
    <url>%2F2018%2F06%2F19%2F20180619%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>技术</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>技术第一</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>%2FREADME.html</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[标签]]></title>
    <url>%2Ftags%2Findex.html</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[分类]]></title>
    <url>%2Fcategories%2Findex.html</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[关于]]></title>
    <url>%2Fabout%2Findex.html</url>
    <content type="text"><![CDATA[这就是我，你想知道的我 E-Mail:wudiplk@163.com GitHub:github.com/wudiplk MyBlog:www.wudiplk.top 关于名字 😏plk 普朗克常量（6.62607004 × 10-34 m2 kg / s） 关于写个人博客的，纯属闷骚（PS:语文渣渣一枚），也就想写写文章，分享些东西给大家，也总结总结，记录些东西毕竟时间转眼即逝~ Steam 用户 WeGame用户 喜欢玩国产单机游戏 侠客风云传、古剑、仙剑。对于吃鸡等网游、手游真带不起劲儿来来。 心中的游戏神作：仙剑四（把懵懂的我感动了）、文明6(只有永远的下一回合，史诗级巨作、上下五千年有你不知道历史)、塞尔达传说（这个游戏就用说了超级开放的世界，就差和塞尔达公主结婚生孩子了😏，喜欢玩的朋友可以加我好友 喜欢动漫，大部分神作都看过也很喜欢，比如命运石之门、死亡笔记，还有魔法少女小圆（4：3圆脸也这么好看，强力推荐，想看朋友别被他骗了 老虚出品，必属精品，广告一波~） 电影嘛，这个几句话说不玩了了，有空会写一篇关于电影的文章，不管是爱情、科幻、动作都喜欢，言之不尽。 喜欢跑步、羽毛球 音乐吧也就是个木耳~，有空没事也就捣鼓捣鼓电脑、帮同事盆友一键还原bingo]]></content>
  </entry>
</search>
